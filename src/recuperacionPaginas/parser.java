
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package recuperacionPaginas;

import java_cup.runtime.*;
import elementos.*;
import Objetos.*;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\071\000\002\002\004\000\002\002\004\000\002\002" +
    "\003\000\002\003\006\000\002\004\005\000\002\007\006" +
    "\000\002\005\012\000\002\010\004\000\002\010\003\000" +
    "\002\011\017\000\002\011\017\000\002\011\017\000\002" +
    "\011\017\000\002\011\017\000\002\006\012\000\002\012" +
    "\004\000\002\012\003\000\002\013\012\000\002\013\013" +
    "\000\002\013\013\000\002\013\014\000\002\014\012\000" +
    "\002\017\004\000\002\017\003\000\002\020\017\000\002" +
    "\020\017\000\002\020\017\000\002\020\017\000\002\020" +
    "\017\000\002\020\017\000\002\020\017\000\002\020\017" +
    "\000\002\020\017\000\002\016\012\000\002\021\004\000" +
    "\002\021\003\000\002\022\017\000\002\022\017\000\002" +
    "\022\017\000\002\022\017\000\002\022\017\000\002\023" +
    "\012\000\002\024\004\000\002\024\003\000\002\025\017" +
    "\000\002\025\017\000\002\025\017\000\002\025\017\000" +
    "\002\025\017\000\002\025\017\000\002\025\017\000\002" +
    "\025\017\000\002\025\017\000\002\015\012\000\002\026" +
    "\004\000\002\026\003\000\002\027\011" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u015c\000\004\004\004\001\002\000\004\005\u015d\001" +
    "\002\000\006\002\u015c\004\004\001\002\000\006\002\uffff" +
    "\004\uffff\001\002\000\004\004\011\001\002\000\004\004" +
    "\100\001\002\000\004\010\012\001\002\000\004\006\013" +
    "\001\002\000\004\004\016\001\002\000\004\004\ufff9\001" +
    "\002\000\004\004\074\001\002\000\004\011\017\001\002" +
    "\000\004\012\020\001\002\000\004\013\021\001\002\000" +
    "\004\014\022\001\002\000\014\015\024\032\027\033\026" +
    "\034\025\035\023\001\002\000\004\014\064\001\002\000" +
    "\004\014\055\001\002\000\004\014\046\001\002\000\004" +
    "\014\037\001\002\000\004\014\030\001\002\000\004\006" +
    "\031\001\002\000\004\016\032\001\002\000\004\004\033" +
    "\001\002\000\004\007\034\001\002\000\004\011\035\001" +
    "\002\000\004\006\036\001\002\000\004\004\ufff7\001\002" +
    "\000\004\006\040\001\002\000\004\016\041\001\002\000" +
    "\004\004\042\001\002\000\004\007\043\001\002\000\004" +
    "\011\044\001\002\000\004\006\045\001\002\000\004\004" +
    "\ufff6\001\002\000\004\006\047\001\002\000\004\016\050" +
    "\001\002\000\004\004\051\001\002\000\004\007\052\001" +
    "\002\000\004\011\053\001\002\000\004\006\054\001\002" +
    "\000\004\004\ufff5\001\002\000\004\006\056\001\002\000" +
    "\004\016\057\001\002\000\004\004\060\001\002\000\004" +
    "\007\061\001\002\000\004\011\062\001\002\000\004\006" +
    "\063\001\002\000\004\004\ufff8\001\002\000\004\006\065" +
    "\001\002\000\004\016\066\001\002\000\004\004\067\001" +
    "\002\000\004\007\070\001\002\000\004\011\071\001\002" +
    "\000\004\006\072\001\002\000\004\004\ufff4\001\002\000" +
    "\004\004\ufffa\001\002\000\006\007\075\011\017\001\002" +
    "\000\004\010\076\001\002\000\004\006\077\001\002\000" +
    "\004\004\ufffb\001\002\000\004\017\107\001\002\000\004" +
    "\004\103\001\002\000\006\002\ufffe\004\ufffe\001\002\000" +
    "\004\007\104\001\002\000\004\005\105\001\002\000\004" +
    "\006\106\001\002\000\006\002\ufffc\004\ufffc\001\002\000" +
    "\004\006\110\001\002\000\004\004\111\001\002\000\004" +
    "\020\117\001\002\000\004\004\ufff1\001\002\000\004\004" +
    "\114\001\002\000\006\007\116\020\117\001\002\000\004" +
    "\004\ufff2\001\002\000\004\017\u0159\001\002\000\004\006" +
    "\120\001\002\000\004\004\121\001\002\000\004\021\u0103" +
    "\001\002\000\004\004\124\001\002\000\004\004\372\001" +
    "\002\000\010\007\132\022\134\023\133\001\002\000\004" +
    "\004\126\001\002\000\004\007\127\001\002\000\004\020" +
    "\130\001\002\000\004\006\131\001\002\000\004\004\uffee" +
    "\001\002\000\004\020\370\001\002\000\004\006\351\001" +
    "\002\000\004\006\135\001\002\000\004\004\136\001\002" +
    "\000\004\025\144\001\002\000\004\004\uffde\001\002\000" +
    "\004\004\141\001\002\000\006\007\143\025\144\001\002" +
    "\000\004\004\uffdf\001\002\000\004\022\347\001\002\000" +
    "\004\012\145\001\002\000\004\013\146\001\002\000\004" +
    "\014\147\001\002\000\014\036\150\050\154\051\152\052" +
    "\153\053\151\001\002\000\004\014\340\001\002\000\004" +
    "\014\331\001\002\000\004\014\322\001\002\000\004\014" +
    "\313\001\002\000\004\014\155\001\002\000\004\006\156" +
    "\001\002\000\004\004\157\001\002\000\004\027\165\001" +
    "\002\000\004\004\161\001\002\000\004\007\162\001\002" +
    "\000\004\025\163\001\002\000\004\006\164\001\002\000" +
    "\004\004\uffdc\001\002\000\004\006\166\001\002\000\004" +
    "\004\170\001\002\000\004\004\uffd6\001\002\000\004\026" +
    "\175\001\002\000\004\004\173\001\002\000\004\004\uffd7" +
    "\001\002\000\006\007\174\026\175\001\002\000\004\027" +
    "\311\001\002\000\004\012\176\001\002\000\004\013\177" +
    "\001\002\000\004\014\200\001\002\000\024\015\210\040" +
    "\205\041\204\042\211\043\201\044\203\045\206\046\202" +
    "\047\207\001\002\000\004\014\302\001\002\000\004\014" +
    "\273\001\002\000\004\014\264\001\002\000\004\014\255" +
    "\001\002\000\004\014\246\001\002\000\004\014\237\001" +
    "\002\000\004\014\230\001\002\000\004\014\221\001\002" +
    "\000\004\014\212\001\002\000\004\006\213\001\002\000" +
    "\004\016\214\001\002\000\004\004\215\001\002\000\004" +
    "\007\216\001\002\000\004\026\217\001\002\000\004\006" +
    "\220\001\002\000\004\004\uffd3\001\002\000\004\006\222" +
    "\001\002\000\004\016\223\001\002\000\004\004\224\001" +
    "\002\000\004\007\225\001\002\000\004\026\226\001\002" +
    "\000\004\006\227\001\002\000\004\004\uffd4\001\002\000" +
    "\004\006\231\001\002\000\004\016\232\001\002\000\004" +
    "\004\233\001\002\000\004\007\234\001\002\000\004\026" +
    "\235\001\002\000\004\006\236\001\002\000\004\004\uffcd" +
    "\001\002\000\004\006\240\001\002\000\004\016\241\001" +
    "\002\000\004\004\242\001\002\000\004\007\243\001\002" +
    "\000\004\026\244\001\002\000\004\006\245\001\002\000" +
    "\004\004\uffd0\001\002\000\004\006\247\001\002\000\004" +
    "\016\250\001\002\000\004\004\251\001\002\000\004\007" +
    "\252\001\002\000\004\026\253\001\002\000\004\006\254" +
    "\001\002\000\004\004\uffce\001\002\000\004\006\256\001" +
    "\002\000\004\016\257\001\002\000\004\004\260\001\002" +
    "\000\004\007\261\001\002\000\004\026\262\001\002\000" +
    "\004\006\263\001\002\000\004\004\uffd5\001\002\000\004" +
    "\006\265\001\002\000\004\016\266\001\002\000\004\004" +
    "\267\001\002\000\004\007\270\001\002\000\004\026\271" +
    "\001\002\000\004\006\272\001\002\000\004\004\uffd1\001" +
    "\002\000\004\006\274\001\002\000\004\016\275\001\002" +
    "\000\004\004\276\001\002\000\004\007\277\001\002\000" +
    "\004\026\300\001\002\000\004\006\301\001\002\000\004" +
    "\004\uffcf\001\002\000\004\006\303\001\002\000\004\016" +
    "\304\001\002\000\004\004\305\001\002\000\004\007\306" +
    "\001\002\000\004\026\307\001\002\000\004\006\310\001" +
    "\002\000\004\004\uffd2\001\002\000\004\006\312\001\002" +
    "\000\004\004\uffd8\001\002\000\004\006\314\001\002\000" +
    "\004\004\157\001\002\000\004\004\316\001\002\000\004" +
    "\007\317\001\002\000\004\025\320\001\002\000\004\006" +
    "\321\001\002\000\004\004\uffda\001\002\000\004\006\323" +
    "\001\002\000\004\004\157\001\002\000\004\004\325\001" +
    "\002\000\004\007\326\001\002\000\004\025\327\001\002" +
    "\000\004\006\330\001\002\000\004\004\uffdb\001\002\000" +
    "\004\006\332\001\002\000\004\004\157\001\002\000\004" +
    "\004\334\001\002\000\004\007\335\001\002\000\004\025" +
    "\336\001\002\000\004\006\337\001\002\000\004\004\uffd9" +
    "\001\002\000\004\006\341\001\002\000\004\004\157\001" +
    "\002\000\004\004\343\001\002\000\004\007\344\001\002" +
    "\000\004\025\345\001\002\000\004\006\346\001\002\000" +
    "\004\004\uffdd\001\002\000\004\006\350\001\002\000\004" +
    "\004\uffe0\001\002\000\004\004\352\001\002\000\004\030" +
    "\360\001\002\000\004\004\355\001\002\000\004\004\uffca" +
    "\001\002\000\006\007\357\030\360\001\002\000\004\004" +
    "\uffcb\001\002\000\004\023\366\001\002\000\004\012\361" +
    "\001\002\000\004\013\362\001\002\000\004\016\363\001" +
    "\002\000\004\007\364\001\002\000\004\006\365\001\002" +
    "\000\004\004\uffc9\001\002\000\004\006\367\001\002\000" +
    "\004\004\uffcc\001\002\000\004\006\371\001\002\000\004" +
    "\004\ufff0\001\002\000\006\007\u0100\023\133\001\002\000" +
    "\004\004\374\001\002\000\004\007\375\001\002\000\004" +
    "\020\376\001\002\000\004\006\377\001\002\000\004\004" +
    "\uffed\001\002\000\004\020\u0101\001\002\000\004\006\u0102" +
    "\001\002\000\004\004\uffef\001\002\000\004\006\u0104\001" +
    "\002\000\004\004\u0106\001\002\000\004\004\uffea\001\002" +
    "\000\004\024\u010b\001\002\000\004\004\u0109\001\002\000" +
    "\004\004\uffeb\001\002\000\006\007\u010a\024\u010b\001\002" +
    "\000\004\021\u0157\001\002\000\004\012\u010c\001\002\000" +
    "\004\013\u010d\001\002\000\004\014\u010e\001\002\000\024" +
    "\015\u0115\031\u0114\032\u010f\033\u0116\034\u0113\035\u0117\036" +
    "\u0111\037\u0110\040\u0112\001\002\000\004\014\u0150\001\002" +
    "\000\004\014\u0149\001\002\000\004\014\u0142\001\002\000" +
    "\004\014\u013b\001\002\000\004\014\u0134\001\002\000\004" +
    "\014\u012d\001\002\000\004\014\u0126\001\002\000\004\014" +
    "\u011f\001\002\000\004\014\u0118\001\002\000\004\006\u0119" +
    "\001\002\000\004\016\u011a\001\002\000\004\004\u011b\001" +
    "\002\000\004\007\u011c\001\002\000\004\024\u011d\001\002" +
    "\000\004\006\u011e\001\002\000\004\004\uffe1\001\002\000" +
    "\004\006\u0120\001\002\000\004\016\u0121\001\002\000\004" +
    "\004\u0122\001\002\000\004\007\u0123\001\002\000\004\024" +
    "\u0124\001\002\000\004\006\u0125\001\002\000\004\004\uffe3" +
    "\001\002\000\004\006\u0127\001\002\000\004\016\u0128\001" +
    "\002\000\004\004\u0129\001\002\000\004\007\u012a\001\002" +
    "\000\004\024\u012b\001\002\000\004\006\u012c\001\002\000" +
    "\004\004\uffe9\001\002\000\004\006\u012e\001\002\000\004" +
    "\016\u012f\001\002\000\004\004\u0130\001\002\000\004\007" +
    "\u0131\001\002\000\004\024\u0132\001\002\000\004\006\u0133" +
    "\001\002\000\004\004\uffe8\001\002\000\004\006\u0135\001" +
    "\002\000\004\016\u0136\001\002\000\004\004\u0137\001\002" +
    "\000\004\007\u0138\001\002\000\004\024\u0139\001\002\000" +
    "\004\006\u013a\001\002\000\004\004\uffe2\001\002\000\004" +
    "\006\u013c\001\002\000\004\016\u013d\001\002\000\004\004" +
    "\u013e\001\002\000\004\007\u013f\001\002\000\004\024\u0140" +
    "\001\002\000\004\006\u0141\001\002\000\004\004\uffe5\001" +
    "\002\000\004\006\u0143\001\002\000\004\016\u0144\001\002" +
    "\000\004\004\u0145\001\002\000\004\007\u0146\001\002\000" +
    "\004\024\u0147\001\002\000\004\006\u0148\001\002\000\004" +
    "\004\uffe7\001\002\000\004\006\u014a\001\002\000\004\016" +
    "\u014b\001\002\000\004\004\u014c\001\002\000\004\007\u014d" +
    "\001\002\000\004\024\u014e\001\002\000\004\006\u014f\001" +
    "\002\000\004\004\uffe6\001\002\000\004\006\u0151\001\002" +
    "\000\004\016\u0152\001\002\000\004\004\u0153\001\002\000" +
    "\004\007\u0154\001\002\000\004\024\u0155\001\002\000\004" +
    "\006\u0156\001\002\000\004\004\uffe4\001\002\000\004\006" +
    "\u0158\001\002\000\004\004\uffec\001\002\000\004\006\u015a" +
    "\001\002\000\004\004\ufff3\001\002\000\006\002\000\004" +
    "\000\001\002\000\004\002\001\001\002\000\004\006\u015e" +
    "\001\002\000\004\004\ufffd\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u015c\000\010\002\004\003\005\004\006\001\001\000" +
    "\002\001\001\000\006\003\u015a\004\006\001\001\000\002" +
    "\001\001\000\004\005\007\001\001\000\004\006\100\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\010\014" +
    "\011\013\001\001\000\002\001\001\000\004\011\072\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\007" +
    "\101\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\012\112\013\111\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\013\114\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\014\121\001\001\000\002\001\001\000\006\015" +
    "\124\016\122\001\001\000\004\015\372\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\021\137\022" +
    "\136\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\022\141\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\023\157\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\024\170\025\166\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\171\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\023\314\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\023\323\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\023\332\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\341\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\026\352\027\353\001\001" +
    "\000\002\001\001\000\004\027\355\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\017\u0106\020\u0104\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\020\u0107\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}





    int fila,columna;
    String lexema;
    SitioWeb sitioWeb;
    PaginaWeb paginaWeb;
    Componente componente;
    //  VARIABLES
    // Connect this parser to a scanner!
    public parser(AnalizadorLexicoPaginas lex) {
	super(lex);
        
    }

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s){        
        try {
        this.lexema =s.value.toString();
        String lexema = s.value.toString();
        int fila = s.left;
        int columna = s.right;
        System.out.println("ERROR"+lexema+" "+fila+" "+columna);
        } catch (Exception e) {
            System.out.println("Error Recuperable se esperaba mas simbolos en ultima fila");
        } 
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{        
        try {
            String lexema = s.value.toString();
            int fila = s.left;
            int columna = s.right;
            //this.clienteFrame.mostrarErrorSintactico("NO HAS CONTROLADO ESTE ERROR");
            //this.clienteFrame.setSeDebeEnviarElTexto(false);
        System.out.println("ERROR"+lexema+" "+fila+" "+columna);

        } catch (Exception e) {
            System.out.println("ERROR EN LA ESTRUCUTURA PRINCIPAL acciones");
        }
    }
/*
    private void iniciarSitioWeb(Object i,String tipo,int ileft,int iright){
  
    }


    private void iniciarPaginaWeb(Object i,String tipo,int ileft,int iright){

    }
*/


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= conjuntoDeSitiosWeb EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // conjuntoDeSitiosWeb ::= conjuntoDeSitiosWeb unSitioWeb 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeSitiosWeb",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // conjuntoDeSitiosWeb ::= unSitioWeb 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeSitiosWeb",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // unSitioWeb ::= inicioSitioWeb parametrosSitioWeb paginasSitioWeb finSitioWeb 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("unSitioWeb",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // inicioSitioWeb ::= MENOR_QUE SITIO_WEB MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicioSitioWeb",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // finSitioWeb ::= MENOR_QUE DIAGONAL SITIO_WEB MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("finSitioWeb",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // parametrosSitioWeb ::= MENOR_QUE PARAMETROS_SITIO_WEB MAYOR_QUE conjuntoDeParametrosDeSitioWeb MENOR_QUE DIAGONAL PARAMETROS_SITIO_WEB MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametrosSitioWeb",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // conjuntoDeParametrosDeSitioWeb ::= conjuntoDeParametrosDeSitioWeb unParametroDeSitioWeb 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeParametrosDeSitioWeb",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // conjuntoDeParametrosDeSitioWeb ::= unParametroDeSitioWeb 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeParametrosDeSitioWeb",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // unParametroDeSitioWeb ::= MENOR_QUE PARAMETRO_SITIO_WEB NOMBRE IGUAL COMILLA ID COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_SITIO_WEB MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		sitioWeb = new SitioWeb();sitioWeb.setId(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDeSitioWeb",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // unParametroDeSitioWeb ::= MENOR_QUE PARAMETRO_SITIO_WEB NOMBRE IGUAL COMILLA USUARIO_CREACION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_SITIO_WEB MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		sitioWeb.setUsuarioCreacion(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDeSitioWeb",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // unParametroDeSitioWeb ::= MENOR_QUE PARAMETRO_SITIO_WEB NOMBRE IGUAL COMILLA FECHA_CREACION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_SITIO_WEB MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		sitioWeb.setFechaCreacion(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDeSitioWeb",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // unParametroDeSitioWeb ::= MENOR_QUE PARAMETRO_SITIO_WEB NOMBRE IGUAL COMILLA FECHA_MODIFICACION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_SITIO_WEB MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		sitioWeb.setFechaModificacion(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDeSitioWeb",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // unParametroDeSitioWeb ::= MENOR_QUE PARAMETRO_SITIO_WEB NOMBRE IGUAL COMILLA USUARIO_MODIFICACION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_SITIO_WEB MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		sitioWeb.setUsuarioModificacion(t);
                           Run.listaDeSitiosWeb.add(sitioWeb);
                         
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDeSitioWeb",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // paginasSitioWeb ::= MENOR_QUE PAGINAS_SITIO_WEB MAYOR_QUE conjuntoDePaginas MENOR_QUE DIAGONAL PAGINAS_SITIO_WEB MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("paginasSitioWeb",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // conjuntoDePaginas ::= conjuntoDePaginas unaPagina 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDePaginas",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // conjuntoDePaginas ::= unaPagina 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDePaginas",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // unaPagina ::= MENOR_QUE PAGINA MAYOR_QUE parametrosPagina MENOR_QUE DIAGONAL PAGINA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("unaPagina",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // unaPagina ::= MENOR_QUE PAGINA MAYOR_QUE parametrosPagina componentes MENOR_QUE DIAGONAL PAGINA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("unaPagina",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // unaPagina ::= MENOR_QUE PAGINA MAYOR_QUE parametrosPagina etiquetas MENOR_QUE DIAGONAL PAGINA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("unaPagina",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // unaPagina ::= MENOR_QUE PAGINA MAYOR_QUE parametrosPagina componentes etiquetas MENOR_QUE DIAGONAL PAGINA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("unaPagina",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // parametrosPagina ::= MENOR_QUE PARAMETROS_DE_PAGINA MAYOR_QUE conjuntoDeParametrosDePagina MENOR_QUE DIAGONAL PARAMETROS_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametrosPagina",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // conjuntoDeParametrosDePagina ::= conjuntoDeParametrosDePagina unParametroDePagina 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeParametrosDePagina",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // conjuntoDeParametrosDePagina ::= unParametroDePagina 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeParametrosDePagina",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // unParametroDePagina ::= MENOR_QUE PARAMETRO_DE_PAGINA NOMBRE IGUAL COMILLA ID COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		paginaWeb = new PaginaWeb();paginaWeb.setId(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDePagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // unParametroDePagina ::= MENOR_QUE PARAMETRO_DE_PAGINA NOMBRE IGUAL COMILLA DIRECCION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		paginaWeb.setDireccion(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDePagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // unParametroDePagina ::= MENOR_QUE PARAMETRO_DE_PAGINA NOMBRE IGUAL COMILLA TITULO COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		paginaWeb.setTitulo(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDePagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // unParametroDePagina ::= MENOR_QUE PARAMETRO_DE_PAGINA NOMBRE IGUAL COMILLA SITIO COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		paginaWeb.setSitio(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDePagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // unParametroDePagina ::= MENOR_QUE PARAMETRO_DE_PAGINA NOMBRE IGUAL COMILLA PADRE COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		paginaWeb.setPadre(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDePagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // unParametroDePagina ::= MENOR_QUE PARAMETRO_DE_PAGINA NOMBRE IGUAL COMILLA USUARIO_CREACION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		paginaWeb.setUsuarioCreacion(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDePagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // unParametroDePagina ::= MENOR_QUE PARAMETRO_DE_PAGINA NOMBRE IGUAL COMILLA FECHA_CREACION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		paginaWeb.setFechaDeCreacion(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDePagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // unParametroDePagina ::= MENOR_QUE PARAMETRO_DE_PAGINA NOMBRE IGUAL COMILLA FECHA_MODIFICACION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		paginaWeb.setFechaModificacion(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDePagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // unParametroDePagina ::= MENOR_QUE PARAMETRO_DE_PAGINA NOMBRE IGUAL COMILLA USUARIO_MODIFICACION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL PARAMETRO_DE_PAGINA MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		paginaWeb.setUsuarioModificacion(t);
                         Run.listaDePaginasWeb.add(paginaWeb);
                         
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unParametroDePagina",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // componentes ::= MENOR_QUE COMPONENTES MAYOR_QUE conjuntoDeComponentes MENOR_QUE DIAGONAL COMPONENTES MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("componentes",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // conjuntoDeComponentes ::= conjuntoDeComponentes unComponente 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeComponentes",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // conjuntoDeComponentes ::= unComponente 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeComponentes",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // unComponente ::= MENOR_QUE COMPONENTE NOMBRE IGUAL COMILLA TITULO COMILLA MAYOR_QUE conjuntoDeAtributos MENOR_QUE DIAGONAL COMPONENTE MAYOR_QUE 
            {
              Object RESULT =null;
		componente.setClase("[TITULO]");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unComponente",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // unComponente ::= MENOR_QUE COMPONENTE NOMBRE IGUAL COMILLA PARRAFO COMILLA MAYOR_QUE conjuntoDeAtributos MENOR_QUE DIAGONAL COMPONENTE MAYOR_QUE 
            {
              Object RESULT =null;
		componente.setClase("[PARRAFO]");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unComponente",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // unComponente ::= MENOR_QUE COMPONENTE NOMBRE IGUAL COMILLA IMAGEN COMILLA MAYOR_QUE conjuntoDeAtributos MENOR_QUE DIAGONAL COMPONENTE MAYOR_QUE 
            {
              Object RESULT =null;
		componente.setClase("[IMAGEN]");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unComponente",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // unComponente ::= MENOR_QUE COMPONENTE NOMBRE IGUAL COMILLA VIDEO COMILLA MAYOR_QUE conjuntoDeAtributos MENOR_QUE DIAGONAL COMPONENTE MAYOR_QUE 
            {
              Object RESULT =null;
		componente.setClase("[VIDEO]");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unComponente",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // unComponente ::= MENOR_QUE COMPONENTE NOMBRE IGUAL COMILLA MENU COMILLA MAYOR_QUE conjuntoDeAtributos MENOR_QUE DIAGONAL COMPONENTE MAYOR_QUE 
            {
              Object RESULT =null;
		componente.setClase("[MENU]");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unComponente",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // conjuntoDeAtributos ::= MENOR_QUE ATRIBUTOS MAYOR_QUE atributosDeComponente MENOR_QUE DIAGONAL ATRIBUTOS MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeAtributos",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // atributosDeComponente ::= atributosDeComponente unAtributo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributosDeComponente",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // atributosDeComponente ::= unAtributo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("atributosDeComponente",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // unAtributo ::= MENOR_QUE ATRIBUTO NOMBRE IGUAL COMILLA TEXTO COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		componente.setTexto(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unAtributo",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // unAtributo ::= MENOR_QUE ATRIBUTO NOMBRE IGUAL COMILLA ID COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		componente=new Componente();componente.setId(t);paginaWeb.getListaDeComponentes().add(componente);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unAtributo",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // unAtributo ::= MENOR_QUE ATRIBUTO NOMBRE IGUAL COMILLA ALINEACION COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		componente.setAlineacion(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unAtributo",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // unAtributo ::= MENOR_QUE ATRIBUTO NOMBRE IGUAL COMILLA COLOR COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		componente.setColor(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unAtributo",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // unAtributo ::= MENOR_QUE ATRIBUTO NOMBRE IGUAL COMILLA ORIGEN COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		componente.setOrigen(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unAtributo",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // unAtributo ::= MENOR_QUE ATRIBUTO NOMBRE IGUAL COMILLA ALTURA COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		componente.setAltura(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unAtributo",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // unAtributo ::= MENOR_QUE ATRIBUTO NOMBRE IGUAL COMILLA ANCHO COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		componente.setAncho(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unAtributo",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // unAtributo ::= MENOR_QUE ATRIBUTO NOMBRE IGUAL COMILLA PADRE COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		componente.setPadre(t);
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unAtributo",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // unAtributo ::= MENOR_QUE ATRIBUTO NOMBRE IGUAL COMILLA ETIQUETAS_MENU COMILLA MAYOR_QUE ORACION MENOR_QUE DIAGONAL ATRIBUTO MAYOR_QUE 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		componente.setEtiquetas(t);
              
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unAtributo",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-12)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // etiquetas ::= MENOR_QUE ETIQUETAS MAYOR_QUE conjuntoDeEtiquetas MENOR_QUE DIAGONAL ETIQUETAS MAYOR_QUE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("etiquetas",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // conjuntoDeEtiquetas ::= conjuntoDeEtiquetas unaEtiqueta 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeEtiquetas",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // conjuntoDeEtiquetas ::= unaEtiqueta 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("conjuntoDeEtiquetas",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // unaEtiqueta ::= MENOR_QUE ETIQUETA NOMBRE IGUAL ORACION DIAGONAL MAYOR_QUE 
            {
              Object RESULT =null;
		int tleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).left;
		int tright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).right;
		String t = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		
                  Etiqueta etiqueta = new Etiqueta(t);
                  paginaWeb.getListaDeEtiquetas().add(etiqueta);
                
              CUP$parser$result = parser.getSymbolFactory().newSymbol("unaEtiqueta",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
